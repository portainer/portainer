name: Test

env:
  GO_VERSION: 1.22.5
  NODE_VERSION: 18.x

on:
  workflow_dispatch:
  pull_request:
    branches:
      - master
      - develop
      - release/*
    types:
      - opened
      - reopened
      - synchronize
      - ready_for_review
  push:
    branches:
      - master
      - develop
      - release/*

jobs:
  test-client:
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - name: 'checkout the current branch'
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: 'set up node.js'
        uses: actions/setup-node@v4.0.1
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - run: yarn --frozen-lockfile

      - name: Run tests
        run: make test-client ARGS="--maxWorkers=2 --minWorkers=1"

  test-server:
    strategy:
      matrix:
        config:
          - { platform: linux, arch: amd64 }
          - { platform: linux, arch: arm64 }
          - { platform: windows, arch: amd64, version: 1809 }
          - { platform: windows, arch: amd64, version: ltsc2022 }
    runs-on: ubuntu-latest
    if: github.event.pull_request.draft == false

    steps:
      - name: 'checkout the current branch'
        uses: actions/checkout@v4.1.1
        with:
          ref: ${{ github.event.inputs.branch }}

      - name: 'set up golang'
        uses: actions/setup-go@v5.0.0
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: 'install dependencies'
        run: make test-deps PLATFORM=linux ARCH=amd64

      - name: 'update $PATH'
        run: echo "$(pwd)/dist" >> $GITHUB_PATH

      - name: 'run tests'
        run: make test-server
